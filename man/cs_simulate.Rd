% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/campsite.R
\name{cs_simulate}
\alias{cs_simulate}
\title{Run CAMPSITE simulation}
\usage{
cs_simulate(
  pars,
  ou = list(opt = NULL, alpha4 = NULL),
  root.value = 0,
  age.max = 50,
  age.ext = NULL,
  step_size = 0.01,
  bounds = c(-Inf, Inf),
  plot = TRUE,
  ylims = NULL,
  full_results = FALSE,
  show_shiny_i = FALSE
)
}
\arguments{
\item{pars}{an object of class \code{cs_pars}.}

\item{ou}{a named list of length 2 containing a vector of \code{optima} and \code{alpha4} values.}

\item{root.value}{numeric. The initial trait value of the root node. Must be within the specified bounds.}

\item{age.max}{numeric. maximum age of simulation}

\item{age.ext}{age of extinction}

\item{step_size}{size of each simulation step}

\item{bounds}{numeric vector of length 2. Trait value bounds}

\item{plot}{logical. Whether to plot resulting tree}

\item{ylims}{ylim}

\item{full_results}{logical. Whether to return full results, including lineage and traits.}

\item{show_shiny_i}{logical. Whether to export simulation iteration number to global environment (useful for progress tracking in shiny app).}
}
\value{
an object of class \code{cs_sim_results} containing the following:
\itemize{
\item \code{trees} trees resulting from the simulated lineage evolution. Each tree element contains the tree, an object of class \code{phylo} (\code{tree}),
and a numeric vector of tip values (\code{tips}).
\itemize{
\item \code{all} tree of all lineages
\item \code{gsp_fossil} tree that excludes incomplete lineages, i.e. lineages that were
incipient at the end of the simulation or went extinct before completing speciation.
\item \code{gsp_extant} tree including only extant species. Both \code{tree} and \code{tips} will
be \code{NULL} if the process dies and there are no extant species at the end of the simulation.
}
}
}
\description{
Run simulation using the Competition And Multiple-Peak Selection Integrated Trait Evolution (CAMPSITE) model
}
\examples{
\dontrun{
pars <- cs_pars()

cs_simulate(pars, ou = list(opt = NULL, alpha4 = NULL), root.value = 0, age.max = 10, 
age.ext = NULL, step_size = 0.01, bounds = c(-Inf, Inf), 
plot = TRUE, ylims = NULL, full_results = TRUE) 
}

}
